"""add description column to events

Revision ID: 4a1b53bc786c
Revises:
Create Date: 2025-05-19 18:25:41.833667

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "4a1b53bc786c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("events", sa.Column("description", sa.Text(), nullable=True))
    op.add_column(
        "events",
        sa.Column("start_date_time", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "events", sa.Column("end_date_time", sa.DateTime(timezone=True), nullable=True)
    )
    op.drop_constraint("events_code_key", "events", type_="unique")
    op.create_index(op.f("ix_events_code"), "events", ["code"], unique=True)
    op.create_index(op.f("ix_events_id"), "events", ["id"], unique=False)
    op.drop_column("events", "start_time")
    op.alter_column(
        "faces",
        "bbox",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        type_=sa.JSON(),
        existing_nullable=False,
    )
    op.create_index(op.f("ix_faces_event_id"), "faces", ["event_id"], unique=False)
    op.create_index(op.f("ix_faces_id"), "faces", ["id"], unique=False)
    op.create_index(op.f("ix_faces_image_id"), "faces", ["image_id"], unique=False)
    op.drop_column("faces", "image_uuid")
    op.alter_column(
        "images",
        "file_extension",
        existing_type=sa.TEXT(),
        type_=sa.String(length=10),
        existing_nullable=False,
    )
    op.drop_constraint("images_uuid_key", "images", type_="unique")
    op.create_index(op.f("ix_images_event_id"), "images", ["event_id"], unique=False)
    op.create_index(op.f("ix_images_id"), "images", ["id"], unique=False)
    op.create_index(op.f("ix_images_uuid"), "images", ["uuid"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_images_uuid"), table_name="images")
    op.drop_index(op.f("ix_images_id"), table_name="images")
    op.drop_index(op.f("ix_images_event_id"), table_name="images")
    op.create_unique_constraint("images_uuid_key", "images", ["uuid"])
    op.alter_column(
        "images",
        "file_extension",
        existing_type=sa.String(length=10),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.add_column(
        "faces",
        sa.Column(
            "image_uuid", sa.VARCHAR(length=32), autoincrement=False, nullable=False
        ),
    )
    op.drop_index(op.f("ix_faces_image_id"), table_name="faces")
    op.drop_index(op.f("ix_faces_id"), table_name="faces")
    op.drop_index(op.f("ix_faces_event_id"), table_name="faces")
    op.alter_column(
        "faces",
        "bbox",
        existing_type=sa.JSON(),
        type_=postgresql.JSONB(astext_type=sa.Text()),
        existing_nullable=False,
    )
    op.add_column(
        "events",
        sa.Column(
            "start_time",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_index(op.f("ix_events_id"), table_name="events")
    op.drop_index(op.f("ix_events_code"), table_name="events")
    op.create_unique_constraint("events_code_key", "events", ["code"])
    op.drop_column("events", "end_date_time")
    op.drop_column("events", "start_date_time")
    op.drop_column("events", "description")
    # ### end Alembic commands ###
