name: Kanta Backend CI

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/src/**'
      - 'backend/pyproject.toml'
      - 'backend/uv.lock'

jobs:
  test-and-lint:
    name: Test & Lint
    runs-on: ubuntu-latest
    env:
      # Configure a constant location for the uv cache
      UV_CACHE_DIR: /tmp/.uv-cache
      
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Run Ruff linting
        working-directory: ./backend
        run: uvx ruff check --fix

      - name: Install the project
        working-directory: ./backend
        run: uv sync --locked --all-extras --dev

      # - name: Run tests
      #   working-directory: ./backend
      #   env:
      #     AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      #     POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      #     POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      #     POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      #     POSTGRES_SERVER: ${{ secrets.POSTGRES_SERVER }}
      #     POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      #   run: uv run pytest

      - name: Minimise uv cache
        run: uv cache prune --ci